//@version=5
indicator('Multiple Indicators Screener', overlay=true)

////////////
// INPUTS //

// SMA
rsi_len = input.int(  14, title = "RSI Length",     group = "Indicators")
rsi_os  = input.float(30, title = "RSI Overbought", group = "Indicators")
rsi_ob  = input.float(70, title = "RSI Oversold",   group = "Indicators")

// TSI
tsi_long_len = input.int(   25, title = "TSI Long Length",   group = "Indicators")
tsi_shrt_len = input.int(   13, title = "TSI Short Length",  group = "Indicators")
tsi_ob       = input.float( 30, title = "TSI Overbought",    group = 'Indicators')
tsi_os       = input.float(-30, title = "TSI Oversold",      group = 'Indicators')

// ADX Params
adx_smooth   = input.int(  14, title = "ADX Smoothing",     group = 'Indicators')
adx_dilen    = input.int(  14, title = "ADX DI Length",     group = 'Indicators')
adx_level    = input.float(40, title = "ADX Level",         group = 'Indicators')

// EMA
len1 = input.int(8, minval=1, title="MA1",     group = 'Indicators')
len2 = input.int(13, minval=1, title="MA2",    group = 'Indicators')
len3 = input.int(21, minval=1, title="MA3",    group = 'Indicators')
len4 = input.int(55, minval=1, title="MA4",    group = 'Indicators')
len5 = input.int(200, minval=1, title="MA5",   group = 'Indicators')

// SuperTrend
sup_atr_len = input.int(   10, "Supertrend ATR Length", group = 'Indicators')
sup_factor  = input.float(3.0, "Supertrend Factor",     group = 'Indicators')

// ROC
roc_len = input.int(  150, title = "ROC Length",     group = "Indicators")

/////////////
// SYMBOLS // 

u01 = input.bool(true,  title = "", group = 'Symbols', inline = 's01')
u02 = input.bool(true,  title = "", group = 'Symbols', inline = 's02')
u03 = input.bool(true,  title = "", group = 'Symbols', inline = 's03')
u04 = input.bool(true,  title = "", group = 'Symbols', inline = 's04')
u05 = input.bool(true,  title = "", group = 'Symbols', inline = 's05')
u06 = input.bool(true,  title = "", group = 'Symbols', inline = 's06')
u07 = input.bool(true,  title = "", group = 'Symbols', inline = 's07')
u08 = input.bool(true,  title = "", group = 'Symbols', inline = 's08')
u09 = input.bool(true,  title = "", group = 'Symbols', inline = 's09')
u10 = input.bool(true,  title = "", group = 'Symbols', inline = 's10')
u11 = input.bool(true,  title = "", group = 'Symbols', inline = 's11')
u12 = input.bool(true,  title = "", group = 'Symbols', inline = 's12')
u13 = input.bool(true,  title = "", group = 'Symbols', inline = 's13')
u14 = input.bool(true,  title = "", group = 'Symbols', inline = 's14')
u15 = input.bool(true,  title = "", group = 'Symbols', inline = 's15')
u16 = input.bool(true,  title = "", group = 'Symbols', inline = 's16')
u17 = input.bool(true,  title = "", group = 'Symbols', inline = 's17')
u18 = input.bool(true,  title = "", group = 'Symbols', inline = 's18')
u19 = input.bool(true,  title = "", group = 'Symbols', inline = 's19')
u20 = input.bool(true,  title = "", group = 'Symbols', inline = 's20')
u21 = input.bool(true,  title = "", group = 'Symbols', inline = 's21')
u22 = input.bool(true,  title = "", group = 'Symbols', inline = 's22')
u23 = input.bool(true,  title = "", group = 'Symbols', inline = 's23')
u24 = input.bool(true,  title = "", group = 'Symbols', inline = 's24')
u25 = input.bool(true,  title = "", group = 'Symbols', inline = 's25')
u26 = input.bool(true,  title = "", group = 'Symbols', inline = 's26')
u27 = input.bool(true,  title = "", group = 'Symbols', inline = 's27')
u28 = input.bool(true,  title = "", group = 'Symbols', inline = 's28')
u29 = input.bool(true,  title = "", group = 'Symbols', inline = 's29')
u30 = input.bool(true,  title = "", group = 'Symbols', inline = 's30')
u31 = input.bool(true,  title = "", group = 'Symbols', inline = 's31')
u32 = input.bool(true,  title = "", group = 'Symbols', inline = 's32')
u33 = input.bool(true,  title = "", group = 'Symbols', inline = 's33')
u34 = input.bool(true,  title = "", group = 'Symbols', inline = 's34')
u35 = input.bool(true,  title = "", group = 'Symbols', inline = 's35')
u36 = input.bool(true, title = "", group = 'Symbols', inline = 's36')
u37 = input.bool(false, title = "", group = 'Symbols', inline = 's37')
u38 = input.bool(false, title = "", group = 'Symbols', inline = 's38')
u39 = input.bool(false, title = "", group = 'Symbols', inline = 's39')
u40 = input.bool(false, title = "", group = 'Symbols', inline = 's40')

s01 = input.symbol('BINANCE:BTCUSDT',  group = 'Symbols', inline = 's01')
s02 = input.symbol('BINANCE:ETHUSDT',  group = 'Symbols', inline = 's02')
s03 = input.symbol('BINANCE:SOLUSDT', group = 'Symbols', inline = 's03')
s04 = input.symbol('BINANCE:LUNAUSDT',  group = 'Symbols', inline = 's04')
s05 = input.symbol('BINANCE:ATOMUSDT',  group = 'Symbols', inline = 's05')
s06 = input.symbol('BINANCE:IOTXUSDT',  group = 'Symbols', inline = 's06')
s07 = input.symbol('BINANCE:CVXUSDT',   group = 'Symbols', inline = 's07')
s08 = input.symbol('BINANCE:FTMUSDT',  group = 'Symbols', inline = 's08')
s09 = input.symbol('BINANCE:SANDUSDT',  group = 'Symbols', inline = 's09')
s10 = input.symbol('BINANCE:ONEUSDT',  group = 'Symbols', inline = 's10')
s11 = input.symbol('BINANCE:RUNEUSDT',  group = 'Symbols', inline = 's11')
s12 = input.symbol('BINANCE:CRVUSDT',  group = 'Symbols', inline = 's12')
s13 = input.symbol('BINANCE:YFIUSDT',  group = 'Symbols', inline = 's13')
s14 = input.symbol('BINANCE:AMPUSDT',   group = 'Symbols', inline = 's14')
s15 = input.symbol('BINANCE:SUSHIUSDT',   group = 'Symbols', inline = 's15')
s16 = input.symbol('BINANCE:DOGEUSDT',  group = 'Symbols', inline = 's16')
s17 = input.symbol('BINANCE:ICPUSDT',  group = 'Symbols', inline = 's17')
s18 = input.symbol('BINANCE:DOTUSDT',  group = 'Symbols', inline = 's18')
s19 = input.symbol('BINANCE:WTCUSDT',  group = 'Symbols', inline = 's19')
s20 = input.symbol('BINANCE:LINKUSDT',  group = 'Symbols', inline = 's20')
s21 = input.symbol('BINANCE:IDEXUSDT',  group = 'Symbols', inline = 's21')
s22 = input.symbol('BINANCE:ANTUSDT',  group = 'Symbols', inline = 's22')
s23 = input.symbol('BINANCE:NEARUSDT',  group = 'Symbols', inline = 's23')
s24 = input.symbol('BINANCE:ADAUSDT',   group = 'Symbols', inline = 's24')
s25 = input.symbol('BINANCE:IOSTUSDT', group = 'Symbols', inline = 's25')
s26 = input.symbol('BINANCE:FXSUSDT',  group = 'Symbols', inline = 's26')
s27 = input.symbol('BINANCE:FTTUSDT', group = 'Symbols', inline = 's27')
s28 = input.symbol('BINANCE:TRXUSDT',   group = 'Symbols', inline = 's28')
s29 = input.symbol('BINANCE:HBARUSDT', group = 'Symbols', inline = 's29')
s30 = input.symbol('BINANCE:SCRTUSDT',   group = 'Symbols', inline = 's30')
s31 = input.symbol('BINANCE:GRTUSDT',  group = 'Symbols', inline = 's31')
s32 = input.symbol('BINANCE:UTKUSDT',  group = 'Symbols', inline = 's32')
s33 = input.symbol('BINANCE:SXPUSDT',  group = 'Symbols', inline = 's33')
s34 = input.symbol('BINANCE:SPELLUSDT',  group = 'Symbols', inline = 's34')
s35 = input.symbol('BINANCE:DUSKUSDT',  group = 'Symbols', inline = 's35')
s36 = input.symbol('SHIBUSDT', group = 'Symbols', inline = 's36')
s37 = input.symbol('LOOKSUSDT',   group = 'Symbols', inline = 's37')
s38 = input.symbol('METISUSDT',   group = 'Symbols', inline = 's38')
s39 = input.symbol('JEWELUSDT',  group = 'Symbols', inline = 's39')
s40 = input.symbol('POKTUSDT',  group = 'Symbols', inline = 's40')

//////////////////
// CALCULATIONS //

// Get only symbol
only_symbol(s) => 
    array.get(str.split(s, ":"), 1)

// for TSI
double_smooth(src, long, short) =>
	fist_smooth = ta.ema(src, long)
	ta.ema(fist_smooth, short)

// ADX
dirmov(len) =>
	up   =  ta.change(high)
	down = -ta.change(low)
	
	plusDM  = na(up)   ? na : (up > down and up > 0   ? up   : 0)
	minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
	
	truerange = ta.rma(ta.tr, len)
	
	plus  = fixnan(100 * ta.rma(plusDM, len)  / truerange)
	minus = fixnan(100 * ta.rma(minusDM, len) / truerange)
	
	[plus, minus]
	
adx_func(dilen, adxlen) =>
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)

screener_func() =>
    
    // RSI
    rsi = ta.rsi(close, rsi_len)
    
    // TSI
    pc = ta.change(close)

    double_smoothed_pc     = double_smooth(pc,           tsi_long_len, tsi_shrt_len)
    double_smoothed_abs_pc = double_smooth(math.abs(pc), tsi_long_len, tsi_shrt_len)
    
    tsi = 100 * (double_smoothed_pc / double_smoothed_abs_pc)
    
    // ADX 
    //adx = adx_func(adx_dilen, adx_smooth)
    
    // Supertrend
    [sup_value, sup_dir] = ta.supertrend(sup_factor, sup_atr_len)

	// ROC
	roc = ta.roc(close, roc_len)
	roc_bool = bool(na)
	roc_bool := roc < 1

    
    // EMA Bool
    ema = ta.ema(close, len1)
	ma1 = ta.ema(close, len1)
	ma2 = ta.ema(close, len2)
	ma3 = ta.ema(close, len3)
	ma4 = ta.ema(close, len4)
	ma5 = ta.ema(close, len5)

	prelong = bool(na)
	longCond = bool(na)
	shortCond = bool(na)
	longCond := ma1 > ma4 and ma2 > ma4 and ma3 > ma4 and roc > 0
	shortCond :=  ma1 < ma4 and ma2 < ma4 and ma3 < ma4
	prelong := ma1 < ma3 and ma1 > ma4

	CondIni = 0
	CondIni := longCond ? -1 : shortCond ? 1 : CondIni[1]
	CondIniW = 0
	CondIniW := prelong ? -1 : longCond ? -1 : shortCond ? -1 : CondIniW[1]
	BLtrig = longCond and CondIni[1] == -1
	BStrig = shortCond and CondIni[1] == 1
	SLtrig = prelong and CondIniW[1] == -1
	

	
	// Write to Table
    [math.round_to_mintick(close), rsi, tsi, roc, ma1, ma2, ma3, ma4, BLtrig, SLtrig, sup_dir]
   



// Security call
[cl01, rsi01, tsi01, roc01, ma101, ma201, ma301, ma401, BLtrig01, SLtrig01, sup01] = request.security(s01, timeframe.period, screener_func())
[cl02, rsi02, tsi02, roc02, ma102, ma202, ma302, ma402, BLtrig02, SLtrig02, sup02] = request.security(s02, timeframe.period, screener_func())
[cl03, rsi03, tsi03, roc03, ma103, ma203, ma303, ma403, BLtrig03, SLtrig03, sup03] = request.security(s03, timeframe.period, screener_func())
[cl04, rsi04, tsi04, roc04, ma104, ma204, ma304, ma404, BLtrig04, SLtrig04, sup04] = request.security(s04, timeframe.period, screener_func())
[cl05, rsi05, tsi05, roc05, ma105, ma205, ma305, ma405, BLtrig05, SLtrig05, sup05] = request.security(s05, timeframe.period, screener_func())
[cl06, rsi06, tsi06, roc06, ma106, ma206, ma306, ma406, BLtrig06, SLtrig06, sup06] = request.security(s06, timeframe.period, screener_func())
[cl07, rsi07, tsi07, roc07, ma107, ma207, ma307, ma407, BLtrig07, SLtrig07, sup07] = request.security(s07, timeframe.period, screener_func())
[cl08, rsi08, tsi08, roc08, ma108, ma208, ma308, ma408, BLtrig08, SLtrig08, sup08] = request.security(s08, timeframe.period, screener_func())
[cl09, rsi09, tsi09, roc09, ma109, ma209, ma309, ma409, BLtrig09, SLtrig09, sup09] = request.security(s09, timeframe.period, screener_func())
[cl10, rsi10, tsi10, roc10, ma110, ma210, ma310, ma410, BLtrig10, SLtrig10, sup10] = request.security(s10, timeframe.period, screener_func())
[cl11, rsi11, tsi11, roc11, ma111, ma211, ma311, ma411, BLtrig11, SLtrig11, sup11] = request.security(s11, timeframe.period, screener_func())
[cl12, rsi12, tsi12, roc12, ma112, ma212, ma312, ma412, BLtrig12, SLtrig12, sup12] = request.security(s12, timeframe.period, screener_func())
[cl13, rsi13, tsi13, roc13, ma113, ma213, ma313, ma413, BLtrig13, SLtrig13, sup13] = request.security(s13, timeframe.period, screener_func())
[cl14, rsi14, tsi14, roc14, ma114, ma214, ma314, ma414, BLtrig14, SLtrig14, sup14] = request.security(s14, timeframe.period, screener_func())
[cl15, rsi15, tsi15, roc15, ma115, ma215, ma315, ma415, BLtrig15, SLtrig15, sup15] = request.security(s15, timeframe.period, screener_func())
[cl16, rsi16, tsi16, roc16, ma116, ma216, ma316, ma416, BLtrig16, SLtrig16, sup16] = request.security(s16, timeframe.period, screener_func())
[cl17, rsi17, tsi17, roc17, ma117, ma217, ma317, ma417, BLtrig17, SLtrig17, sup17] = request.security(s17, timeframe.period, screener_func())
[cl18, rsi18, tsi18, roc18, ma118, ma218, ma318, ma418, BLtrig18, SLtrig18, sup18] = request.security(s18, timeframe.period, screener_func())
[cl19, rsi19, tsi19, roc19, ma119, ma219, ma319, ma419, BLtrig19, SLtrig19, sup19] = request.security(s19, timeframe.period, screener_func())
[cl20, rsi20, tsi20, roc20, ma120, ma220, ma320, ma420, BLtrig20, SLtrig20, sup20] = request.security(s20, timeframe.period, screener_func())
[cl21, rsi21, tsi21, roc21, ma121, ma221, ma321, ma421, BLtrig21, SLtrig21, sup21] = request.security(s21, timeframe.period, screener_func())
[cl22, rsi22, tsi22, roc22, ma122, ma222, ma322, ma422, BLtrig22, SLtrig22, sup22] = request.security(s22, timeframe.period, screener_func())
[cl23, rsi23, tsi23, roc23, ma123, ma223, ma323, ma423, BLtrig23, SLtrig23, sup23] = request.security(s23, timeframe.period, screener_func())
[cl24, rsi24, tsi24, roc24, ma124, ma224, ma324, ma424, BLtrig24, SLtrig24, sup24] = request.security(s24, timeframe.period, screener_func())
[cl25, rsi25, tsi25, roc25, ma125, ma225, ma325, ma425, BLtrig25, SLtrig25, sup25] = request.security(s25, timeframe.period, screener_func())
[cl26, rsi26, tsi26, roc26, ma126, ma226, ma326, ma426, BLtrig26, SLtrig26, sup26] = request.security(s26, timeframe.period, screener_func())
[cl27, rsi27, tsi27, roc27, ma127, ma227, ma327, ma427, BLtrig27, SLtrig27, sup27] = request.security(s27, timeframe.period, screener_func())
[cl28, rsi28, tsi28, roc28, ma128, ma228, ma328, ma428, BLtrig28, SLtrig28, sup28] = request.security(s28, timeframe.period, screener_func())
[cl29, rsi29, tsi29, roc29, ma129, ma229, ma329, ma429, BLtrig29, SLtrig29, sup29] = request.security(s29, timeframe.period, screener_func())
[cl30, rsi30, tsi30, roc30, ma130, ma230, ma330, ma430, BLtrig30, SLtrig30, sup30] = request.security(s30, timeframe.period, screener_func())
[cl31, rsi31, tsi31, roc31, ma131, ma231, ma331, ma431, BLtrig31, SLtrig31, sup31] = request.security(s31, timeframe.period, screener_func())
[cl32, rsi32, tsi32, roc32, ma132, ma232, ma332, ma432, BLtrig32, SLtrig32, sup32] = request.security(s32, timeframe.period, screener_func())
[cl33, rsi33, tsi33, roc33, ma133, ma233, ma333, ma433, BLtrig33, SLtrig33, sup33] = request.security(s33, timeframe.period, screener_func())
[cl34, rsi34, tsi34, roc34, ma134, ma234, ma334, ma434, BLtrig34, SLtrig34, sup34] = request.security(s34, timeframe.period, screener_func())
[cl35, rsi35, tsi35, roc35, ma135, ma235, ma335, ma435, BLtrig35, SLtrig35, sup35] = request.security(s35, timeframe.period, screener_func())
[cl36, rsi36, tsi36, roc36, ma136, ma236, ma336, ma436, BLtrig36, SLtrig36, sup36] = request.security(s36, timeframe.period, screener_func())
[cl37, rsi37, tsi37, roc37, ma137, ma237, ma337, ma437, BLtrig37, SLtrig37, sup37] = request.security(s37, timeframe.period, screener_func())
[cl38, rsi38, tsi38, roc38, ma138, ma238, ma338, ma438, BLtrig38, SLtrig38, sup38] = request.security(s38, timeframe.period, screener_func())
[cl39, rsi39, tsi39, roc39, ma139, ma239, ma339, ma439, BLtrig39, SLtrig39, sup39] = request.security(s39, timeframe.period, screener_func())
[cl40, rsi40, tsi40, roc40, ma140, ma240, ma340, ma440, BLtrig40, SLtrig40, sup40] = request.security(s40, timeframe.period, screener_func())

////////////
// ARRAYS //

s_arr   = array.new_string(0)
u_arr   = array.new_bool(0)
cl_arr  = array.new_float(0)
rsi_arr = array.new_float(0)
tsi_arr = array.new_float(0)
adx_arr = array.new_float(0)
sup_arr = array.new_float(0)
BLtrig_arr = array.new_bool(0)
SLtrig_arr = array.new_bool(0)
ma1_arr = array.new_float(0)
ma2_arr = array.new_float(0)
ma3_arr = array.new_float(0)
ma4_arr = array.new_float(0)
roc_arr = array.new_float(0)

// Add Symbols 
array.push(s_arr, only_symbol(s01))
array.push(s_arr, only_symbol(s02))
array.push(s_arr, only_symbol(s03))
array.push(s_arr, only_symbol(s04))
array.push(s_arr, only_symbol(s05))
array.push(s_arr, only_symbol(s06))
array.push(s_arr, only_symbol(s07))
array.push(s_arr, only_symbol(s08))
array.push(s_arr, only_symbol(s09))
array.push(s_arr, only_symbol(s10))
array.push(s_arr, only_symbol(s11))
array.push(s_arr, only_symbol(s12))
array.push(s_arr, only_symbol(s13))
array.push(s_arr, only_symbol(s14))
array.push(s_arr, only_symbol(s15))
array.push(s_arr, only_symbol(s16))
array.push(s_arr, only_symbol(s17))
array.push(s_arr, only_symbol(s18))
array.push(s_arr, only_symbol(s19))
array.push(s_arr, only_symbol(s20))
array.push(s_arr, only_symbol(s21))
array.push(s_arr, only_symbol(s22))
array.push(s_arr, only_symbol(s23))
array.push(s_arr, only_symbol(s24))
array.push(s_arr, only_symbol(s25))
array.push(s_arr, only_symbol(s26))
array.push(s_arr, only_symbol(s27))
array.push(s_arr, only_symbol(s28))
array.push(s_arr, only_symbol(s29))
array.push(s_arr, only_symbol(s30))
array.push(s_arr, only_symbol(s31))
array.push(s_arr, only_symbol(s32))
array.push(s_arr, only_symbol(s33))
array.push(s_arr, only_symbol(s34))
array.push(s_arr, only_symbol(s35))
array.push(s_arr, only_symbol(s36))
array.push(s_arr, only_symbol(s37))
array.push(s_arr, only_symbol(s38))
array.push(s_arr, only_symbol(s39))
array.push(s_arr, only_symbol(s40))

///////////
// FLAGS //

array.push(u_arr, u01)
array.push(u_arr, u02)
array.push(u_arr, u03)
array.push(u_arr, u04)
array.push(u_arr, u05)
array.push(u_arr, u06)
array.push(u_arr, u07)
array.push(u_arr, u08)
array.push(u_arr, u09)
array.push(u_arr, u10)
array.push(u_arr, u11)
array.push(u_arr, u12)
array.push(u_arr, u13)
array.push(u_arr, u14)
array.push(u_arr, u15)
array.push(u_arr, u16)
array.push(u_arr, u17)
array.push(u_arr, u18)
array.push(u_arr, u19)
array.push(u_arr, u20)
array.push(u_arr, u21)
array.push(u_arr, u22)
array.push(u_arr, u23)
array.push(u_arr, u24)
array.push(u_arr, u25)
array.push(u_arr, u26)
array.push(u_arr, u27)
array.push(u_arr, u28)
array.push(u_arr, u29)
array.push(u_arr, u30)
array.push(u_arr, u31)
array.push(u_arr, u32)
array.push(u_arr, u33)
array.push(u_arr, u34)
array.push(u_arr, u35)
array.push(u_arr, u36)
array.push(u_arr, u37)
array.push(u_arr, u38)
array.push(u_arr, u39)
array.push(u_arr, u40)

///////////
// CLOSE //

array.push(cl_arr, cl01)
array.push(cl_arr, cl02)
array.push(cl_arr, cl03)
array.push(cl_arr, cl04)
array.push(cl_arr, cl05)
array.push(cl_arr, cl06)
array.push(cl_arr, cl07)
array.push(cl_arr, cl08)
array.push(cl_arr, cl09)
array.push(cl_arr, cl10)
array.push(cl_arr, cl11)
array.push(cl_arr, cl12)
array.push(cl_arr, cl13)
array.push(cl_arr, cl14)
array.push(cl_arr, cl15)
array.push(cl_arr, cl16)
array.push(cl_arr, cl17)
array.push(cl_arr, cl18)
array.push(cl_arr, cl19)
array.push(cl_arr, cl20)
array.push(cl_arr, cl21)
array.push(cl_arr, cl22)
array.push(cl_arr, cl23)
array.push(cl_arr, cl24)
array.push(cl_arr, cl25)
array.push(cl_arr, cl26)
array.push(cl_arr, cl27)
array.push(cl_arr, cl28)
array.push(cl_arr, cl29)
array.push(cl_arr, cl30)
array.push(cl_arr, cl31)
array.push(cl_arr, cl32)
array.push(cl_arr, cl33)
array.push(cl_arr, cl34)
array.push(cl_arr, cl35)
array.push(cl_arr, cl36)
array.push(cl_arr, cl37)
array.push(cl_arr, cl38)
array.push(cl_arr, cl39)
array.push(cl_arr, cl40)

/////////
// RSI //

array.push(rsi_arr, rsi01)
array.push(rsi_arr, rsi02)
array.push(rsi_arr, rsi03)
array.push(rsi_arr, rsi04)
array.push(rsi_arr, rsi05)
array.push(rsi_arr, rsi06)
array.push(rsi_arr, rsi07)
array.push(rsi_arr, rsi08)
array.push(rsi_arr, rsi09)
array.push(rsi_arr, rsi10)
array.push(rsi_arr, rsi11)
array.push(rsi_arr, rsi12)
array.push(rsi_arr, rsi13)
array.push(rsi_arr, rsi14)
array.push(rsi_arr, rsi15)
array.push(rsi_arr, rsi16)
array.push(rsi_arr, rsi17)
array.push(rsi_arr, rsi18)
array.push(rsi_arr, rsi19)
array.push(rsi_arr, rsi20)
array.push(rsi_arr, rsi21)
array.push(rsi_arr, rsi22)
array.push(rsi_arr, rsi23)
array.push(rsi_arr, rsi24)
array.push(rsi_arr, rsi25)
array.push(rsi_arr, rsi26)
array.push(rsi_arr, rsi27)
array.push(rsi_arr, rsi28)
array.push(rsi_arr, rsi29)
array.push(rsi_arr, rsi30)
array.push(rsi_arr, rsi31)
array.push(rsi_arr, rsi32)
array.push(rsi_arr, rsi33)
array.push(rsi_arr, rsi34)
array.push(rsi_arr, rsi35)
array.push(rsi_arr, rsi36)
array.push(rsi_arr, rsi37)
array.push(rsi_arr, rsi38)
array.push(rsi_arr, rsi39)
array.push(rsi_arr, rsi40)

/////////
// RSI //

array.push(roc_arr, roc01)
array.push(roc_arr, roc02)
array.push(roc_arr, roc03)
array.push(roc_arr, roc04)
array.push(roc_arr, roc05)
array.push(roc_arr, roc06)
array.push(roc_arr, roc07)
array.push(roc_arr, roc08)
array.push(roc_arr, roc09)
array.push(roc_arr, roc10)
array.push(roc_arr, roc11)
array.push(roc_arr, roc12)
array.push(roc_arr, roc13)
array.push(roc_arr, roc14)
array.push(roc_arr, roc15)
array.push(roc_arr, roc16)
array.push(roc_arr, roc17)
array.push(roc_arr, roc18)
array.push(roc_arr, roc19)
array.push(roc_arr, roc20)
array.push(roc_arr, roc21)
array.push(roc_arr, roc22)
array.push(roc_arr, roc23)
array.push(roc_arr, roc24)
array.push(roc_arr, roc25)
array.push(roc_arr, roc26)
array.push(roc_arr, roc27)
array.push(roc_arr, roc28)
array.push(roc_arr, roc29)
array.push(roc_arr, roc30)
array.push(roc_arr, roc31)
array.push(roc_arr, roc32)
array.push(roc_arr, roc33)
array.push(roc_arr, roc34)
array.push(roc_arr, roc35)
array.push(roc_arr, roc36)
array.push(roc_arr, roc37)
array.push(roc_arr, roc38)
array.push(roc_arr, roc39)
array.push(roc_arr, roc40)

/////////
// TSI //

array.push(tsi_arr, tsi01)
array.push(tsi_arr, tsi02)
array.push(tsi_arr, tsi03)
array.push(tsi_arr, tsi04)
array.push(tsi_arr, tsi05)
array.push(tsi_arr, tsi06)
array.push(tsi_arr, tsi07)
array.push(tsi_arr, tsi08)
array.push(tsi_arr, tsi09)
array.push(tsi_arr, tsi10)
array.push(tsi_arr, tsi11)
array.push(tsi_arr, tsi12)
array.push(tsi_arr, tsi13)
array.push(tsi_arr, tsi14)
array.push(tsi_arr, tsi15)
array.push(tsi_arr, tsi16)
array.push(tsi_arr, tsi17)
array.push(tsi_arr, tsi18)
array.push(tsi_arr, tsi19)
array.push(tsi_arr, tsi20)
array.push(tsi_arr, tsi21)
array.push(tsi_arr, tsi22)
array.push(tsi_arr, tsi23)
array.push(tsi_arr, tsi24)
array.push(tsi_arr, tsi25)
array.push(tsi_arr, tsi26)
array.push(tsi_arr, tsi27)
array.push(tsi_arr, tsi28)
array.push(tsi_arr, tsi29)
array.push(tsi_arr, tsi30)
array.push(tsi_arr, tsi31)
array.push(tsi_arr, tsi32)
array.push(tsi_arr, tsi33)
array.push(tsi_arr, tsi34)
array.push(tsi_arr, tsi35)
array.push(tsi_arr, tsi36)
array.push(tsi_arr, tsi37)
array.push(tsi_arr, tsi38)
array.push(tsi_arr, tsi39)
array.push(tsi_arr, tsi40)

/////////
// ADX //

//array.push(adx_arr, adx01)
//array.push(adx_arr, adx02)
//array.push(adx_arr, adx03)
//array.push(adx_arr, adx04)
//array.push(adx_arr, adx05)
//array.push(adx_arr, adx06)
//array.push(adx_arr, adx07)
//array.push(adx_arr, adx08)
//array.push(adx_arr, adx09)
//array.push(adx_arr, adx10)
//array.push(adx_arr, adx11)
//array.push(adx_arr, adx12)
//array.push(adx_arr, adx13)
//array.push(adx_arr, adx14)
//array.push(adx_arr, adx15)
//array.push(adx_arr, adx16)
//array.push(adx_arr, adx17)
//array.push(adx_arr, adx18)
//array.push(adx_arr, adx19)
//array.push(adx_arr, adx20)
//array.push(adx_arr, adx21)
//array.push(adx_arr, adx22)
//array.push(adx_arr, adx23)
//array.push(adx_arr, adx24)
//array.push(adx_arr, adx25)
//array.push(adx_arr, adx26)
//array.push(adx_arr, adx27)
//array.push(adx_arr, adx28)
//array.push(adx_arr, adx29)
//array.push(adx_arr, adx30)
//array.push(adx_arr, adx31)
//array.push(adx_arr, adx32)
//array.push(adx_arr, adx33)
//array.push(adx_arr, adx34)
//array.push(adx_arr, adx35)
//array.push(adx_arr, adx36)
//array.push(adx_arr, adx37)
//array.push(adx_arr, adx38)
//array.push(adx_arr, adx39)
//array.push(adx_arr, adx40)

////////////////
// SUPERTREND //

array.push(sup_arr, sup01)
array.push(sup_arr, sup02)
array.push(sup_arr, sup03)
array.push(sup_arr, sup04)
array.push(sup_arr, sup05)
array.push(sup_arr, sup06)
array.push(sup_arr, sup07)
array.push(sup_arr, sup08)
array.push(sup_arr, sup09)
array.push(sup_arr, sup10)
array.push(sup_arr, sup11)
array.push(sup_arr, sup12)
array.push(sup_arr, sup13)
array.push(sup_arr, sup14)
array.push(sup_arr, sup15)
array.push(sup_arr, sup16)
array.push(sup_arr, sup17)
array.push(sup_arr, sup18)
array.push(sup_arr, sup19)
array.push(sup_arr, sup20)
array.push(sup_arr, sup21)
array.push(sup_arr, sup22)
array.push(sup_arr, sup23)
array.push(sup_arr, sup24)
array.push(sup_arr, sup25)
array.push(sup_arr, sup26)
array.push(sup_arr, sup27)
array.push(sup_arr, sup28)
array.push(sup_arr, sup29)
array.push(sup_arr, sup30)
array.push(sup_arr, sup31)
array.push(sup_arr, sup32)
array.push(sup_arr, sup33)
array.push(sup_arr, sup34)
array.push(sup_arr, sup35)
array.push(sup_arr, sup36)
array.push(sup_arr, sup37)
array.push(sup_arr, sup38)
array.push(sup_arr, sup39)
array.push(sup_arr, sup40)


////BLtrig //

array.push(BLtrig_arr, BLtrig01)
array.push(BLtrig_arr, BLtrig02)
array.push(BLtrig_arr, BLtrig03)
array.push(BLtrig_arr, BLtrig04)
array.push(BLtrig_arr, BLtrig05)
array.push(BLtrig_arr, BLtrig06)
array.push(BLtrig_arr, BLtrig07)
array.push(BLtrig_arr, BLtrig08)
array.push(BLtrig_arr, BLtrig09)
array.push(BLtrig_arr, BLtrig10)
array.push(BLtrig_arr, BLtrig11)
array.push(BLtrig_arr, BLtrig12)
array.push(BLtrig_arr, BLtrig13)
array.push(BLtrig_arr, BLtrig14)
array.push(BLtrig_arr, BLtrig15)
array.push(BLtrig_arr, BLtrig16)
array.push(BLtrig_arr, BLtrig17)
array.push(BLtrig_arr, BLtrig18)
array.push(BLtrig_arr, BLtrig19)
array.push(BLtrig_arr, BLtrig20)
array.push(BLtrig_arr, BLtrig21)
array.push(BLtrig_arr, BLtrig22)
array.push(BLtrig_arr, BLtrig23)
array.push(BLtrig_arr, BLtrig24)
array.push(BLtrig_arr, BLtrig25)
array.push(BLtrig_arr, BLtrig26)
array.push(BLtrig_arr, BLtrig27)
array.push(BLtrig_arr, BLtrig28)
array.push(BLtrig_arr, BLtrig29)
array.push(BLtrig_arr, BLtrig30)
array.push(BLtrig_arr, BLtrig31)
array.push(BLtrig_arr, BLtrig32)
array.push(BLtrig_arr, BLtrig33)
array.push(BLtrig_arr, BLtrig34)
array.push(BLtrig_arr, BLtrig35)
array.push(BLtrig_arr, BLtrig36)
array.push(BLtrig_arr, BLtrig37)
array.push(BLtrig_arr, BLtrig38)
array.push(BLtrig_arr, BLtrig39)
array.push(BLtrig_arr, BLtrig40)

////SLtrig //

array.push(SLtrig_arr, SLtrig01)
array.push(SLtrig_arr, SLtrig02)
array.push(SLtrig_arr, SLtrig03)
array.push(SLtrig_arr, SLtrig04)
array.push(SLtrig_arr, SLtrig05)
array.push(SLtrig_arr, SLtrig06)
array.push(SLtrig_arr, SLtrig07)
array.push(SLtrig_arr, SLtrig08)
array.push(SLtrig_arr, SLtrig09)
array.push(SLtrig_arr, SLtrig10)
array.push(SLtrig_arr, SLtrig11)
array.push(SLtrig_arr, SLtrig12)
array.push(SLtrig_arr, SLtrig13)
array.push(SLtrig_arr, SLtrig14)
array.push(SLtrig_arr, SLtrig15)
array.push(SLtrig_arr, SLtrig16)
array.push(SLtrig_arr, SLtrig17)
array.push(SLtrig_arr, SLtrig18)
array.push(SLtrig_arr, SLtrig19)
array.push(SLtrig_arr, SLtrig20)
array.push(SLtrig_arr, SLtrig21)
array.push(SLtrig_arr, SLtrig22)
array.push(SLtrig_arr, SLtrig23)
array.push(SLtrig_arr, SLtrig24)
array.push(SLtrig_arr, SLtrig25)
array.push(SLtrig_arr, SLtrig26)
array.push(SLtrig_arr, SLtrig27)
array.push(SLtrig_arr, SLtrig28)
array.push(SLtrig_arr, SLtrig29)
array.push(SLtrig_arr, SLtrig30)
array.push(SLtrig_arr, SLtrig31)
array.push(SLtrig_arr, SLtrig32)
array.push(SLtrig_arr, SLtrig33)
array.push(SLtrig_arr, SLtrig34)
array.push(SLtrig_arr, SLtrig35)
array.push(SLtrig_arr, SLtrig36)
array.push(SLtrig_arr, SLtrig37)
array.push(SLtrig_arr, SLtrig38)
array.push(SLtrig_arr, SLtrig39)
array.push(SLtrig_arr, SLtrig40)

/////////
// EMA1 //

array.push(ma1_arr, ma101)
array.push(ma1_arr, ma102)
array.push(ma1_arr, ma103)
array.push(ma1_arr, ma104)
array.push(ma1_arr, ma105)
array.push(ma1_arr, ma106)
array.push(ma1_arr, ma107)
array.push(ma1_arr, ma108)
array.push(ma1_arr, ma109)
array.push(ma1_arr, ma110)
array.push(ma1_arr, ma111)
array.push(ma1_arr, ma112)
array.push(ma1_arr, ma113)
array.push(ma1_arr, ma114)
array.push(ma1_arr, ma115)
array.push(ma1_arr, ma116)
array.push(ma1_arr, ma117)
array.push(ma1_arr, ma118)
array.push(ma1_arr, ma119)
array.push(ma1_arr, ma120)
array.push(ma1_arr, ma121)
array.push(ma1_arr, ma122)
array.push(ma1_arr, ma123)
array.push(ma1_arr, ma124)
array.push(ma1_arr, ma125)
array.push(ma1_arr, ma126)
array.push(ma1_arr, ma127)
array.push(ma1_arr, ma128)
array.push(ma1_arr, ma129)
array.push(ma1_arr, ma130)
array.push(ma1_arr, ma131)
array.push(ma1_arr, ma132)
array.push(ma1_arr, ma133)
array.push(ma1_arr, ma134)
array.push(ma1_arr, ma135)
array.push(ma1_arr, ma136)
array.push(ma1_arr, ma137)
array.push(ma1_arr, ma138)
array.push(ma1_arr, ma139)
array.push(ma1_arr, ma140)

/////////
// EMA2 //

array.push(ma2_arr, ma201)
array.push(ma2_arr, ma202)
array.push(ma2_arr, ma203)
array.push(ma2_arr, ma204)
array.push(ma2_arr, ma205)
array.push(ma2_arr, ma206)
array.push(ma2_arr, ma207)
array.push(ma2_arr, ma208)
array.push(ma2_arr, ma209)
array.push(ma2_arr, ma210)
array.push(ma2_arr, ma211)
array.push(ma2_arr, ma212)
array.push(ma2_arr, ma213)
array.push(ma2_arr, ma214)
array.push(ma2_arr, ma215)
array.push(ma2_arr, ma216)
array.push(ma2_arr, ma217)
array.push(ma2_arr, ma218)
array.push(ma2_arr, ma219)
array.push(ma2_arr, ma220)
array.push(ma2_arr, ma221)
array.push(ma2_arr, ma222)
array.push(ma2_arr, ma223)
array.push(ma2_arr, ma224)
array.push(ma2_arr, ma225)
array.push(ma2_arr, ma226)
array.push(ma2_arr, ma227)
array.push(ma2_arr, ma228)
array.push(ma2_arr, ma229)
array.push(ma2_arr, ma230)
array.push(ma2_arr, ma231)
array.push(ma2_arr, ma232)
array.push(ma2_arr, ma233)
array.push(ma2_arr, ma234)
array.push(ma2_arr, ma235)
array.push(ma2_arr, ma236)
array.push(ma2_arr, ma237)
array.push(ma2_arr, ma238)
array.push(ma2_arr, ma239)
array.push(ma2_arr, ma240)

/////////
// EMA3 //

array.push(ma3_arr, ma301)
array.push(ma3_arr, ma302)
array.push(ma3_arr, ma303)
array.push(ma3_arr, ma304)
array.push(ma3_arr, ma305)
array.push(ma3_arr, ma306)
array.push(ma3_arr, ma307)
array.push(ma3_arr, ma308)
array.push(ma3_arr, ma309)
array.push(ma3_arr, ma310)
array.push(ma3_arr, ma311)
array.push(ma3_arr, ma312)
array.push(ma3_arr, ma313)
array.push(ma3_arr, ma314)
array.push(ma3_arr, ma315)
array.push(ma3_arr, ma316)
array.push(ma3_arr, ma317)
array.push(ma3_arr, ma318)
array.push(ma3_arr, ma319)
array.push(ma3_arr, ma320)
array.push(ma3_arr, ma321)
array.push(ma3_arr, ma322)
array.push(ma3_arr, ma323)
array.push(ma3_arr, ma324)
array.push(ma3_arr, ma325)
array.push(ma3_arr, ma326)
array.push(ma3_arr, ma327)
array.push(ma3_arr, ma328)
array.push(ma3_arr, ma329)
array.push(ma3_arr, ma330)
array.push(ma3_arr, ma331)
array.push(ma3_arr, ma332)
array.push(ma3_arr, ma333)
array.push(ma3_arr, ma334)
array.push(ma3_arr, ma335)
array.push(ma3_arr, ma336)
array.push(ma3_arr, ma337)
array.push(ma3_arr, ma338)
array.push(ma3_arr, ma339)
array.push(ma3_arr, ma340)

/////////
// EMA4 //

array.push(ma4_arr, ma401)
array.push(ma4_arr, ma402)
array.push(ma4_arr, ma403)
array.push(ma4_arr, ma404)
array.push(ma4_arr, ma405)
array.push(ma4_arr, ma406)
array.push(ma4_arr, ma407)
array.push(ma4_arr, ma408)
array.push(ma4_arr, ma409)
array.push(ma4_arr, ma410)
array.push(ma4_arr, ma411)
array.push(ma4_arr, ma412)
array.push(ma4_arr, ma413)
array.push(ma4_arr, ma414)
array.push(ma4_arr, ma415)
array.push(ma4_arr, ma416)
array.push(ma4_arr, ma417)
array.push(ma4_arr, ma418)
array.push(ma4_arr, ma419)
array.push(ma4_arr, ma420)
array.push(ma4_arr, ma421)
array.push(ma4_arr, ma422)
array.push(ma4_arr, ma423)
array.push(ma4_arr, ma424)
array.push(ma4_arr, ma425)
array.push(ma4_arr, ma426)
array.push(ma4_arr, ma427)
array.push(ma4_arr, ma428)
array.push(ma4_arr, ma429)
array.push(ma4_arr, ma430)
array.push(ma4_arr, ma431)
array.push(ma4_arr, ma432)
array.push(ma4_arr, ma433)
array.push(ma4_arr, ma434)
array.push(ma4_arr, ma435)
array.push(ma4_arr, ma436)
array.push(ma4_arr, ma437)
array.push(ma4_arr, ma438)
array.push(ma4_arr, ma439)
array.push(ma4_arr, ma440)

///////////
// PLOTS //

var tbl = table.new(position.middle_right, 13, 41, frame_color=#151715, frame_width=1, border_width=1, border_color=color.new(color.white, 100))

if barstate.islast

    table.cell(tbl, 0, 0, 'ITVL: '+str.tostring(timeframe.period),     text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 1, 0, 'Price',      text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 2, 0, 'RSI',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 3, 0, 'TSI',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 4, 0, 'ROC',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 5, 0, 'EMA1',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 6, 0, 'EMA2',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 7, 0, 'EMA3',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 8, 0, 'EMA4',        text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 9, 0, 'BLong', text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 10, 0, 'SLong', text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)
    table.cell(tbl, 11, 0, 'Supertrend', text_halign = text.align_center, bgcolor = color.gray, text_color = color.white, text_size = size.small)


    for i = 0 to 39

        if array.get(u_arr, i)
        
            rsi_col  = array.get(rsi_arr, i) > rsi_ob    ? color.red   : array.get(rsi_arr, i) < rsi_os ? color.green : #aaaaaa 
            tsi_col  = array.get(tsi_arr, i) > tsi_ob    ? color.red   : array.get(tsi_arr, i) < tsi_os ? color.green : #aaaaaa  
            //adx_col  = array.get(adx_arr, i) > adx_level ? color.green : #aaaaaa 
        
            sup_text = array.get(sup_arr, i) > 0 ? "Down"      : "Up"
            sup_col  = array.get(sup_arr, i) < 0 ? color.green : color.red
            
            BLtrig_text = array.get(BLtrig_arr, i) == bool(true) ? "Blong"      : "Wait"
			BLtrig_col  = array.get(BLtrig_arr, i) == bool(true) ? color.green : #aaaaaa
			BLtrig_bool = array.get(BLtrig_arr, i) == bool(true)

            SLtrig_text = array.get(SLtrig_arr, i) == bool(true) ? "SLong"      : "Wait"
            SLtrig_col  = array.get(SLtrig_arr, i) == bool(true) ? color.orange : #aaaaaa

            roc_col  = array.get(roc_arr, i) > 0 ? #93D712 : #A3A69F

            ma1_col  = array.get(ma1_arr, i) > array.get(ma2_arr, i) ? color.green : #DEE7CD
            ma2_col  = array.get(ma2_arr, i) > array.get(ma3_arr, i) ? color.green : #DEE7CD
            ma3_col  = array.get(ma3_arr, i) < array.get(ma2_arr, i) ? color.green : #DEE7CD
            ma4_col  = array.get(ma4_arr, i) < array.get(ma3_arr, i) ? color.green : #DEE7CD
            
            /// wite to table  ///
            table.cell(tbl, 0, i + 1, array.get(s_arr, i),                                 	text_halign = text.align_left,   bgcolor = color.gray, text_color = color.white, text_size = size.small)
            table.cell(tbl, 1, i + 1, str.tostring(array.get(cl_arr, i)),                  	text_halign = text.align_center, bgcolor = #aaaaaa,    text_color = color.white, text_size = size.small)
            table.cell(tbl, 2, i + 1, str.tostring(array.get(rsi_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = rsi_col,    text_color = color.white, text_size = size.small)
            table.cell(tbl, 3, i + 1, str.tostring(array.get(tsi_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = tsi_col,    text_color = color.white, text_size = size.small)
            //table.cell(tbl, 4, i + 1, str.tostring(array.get(adx_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = adx_col   , text_color = color.white, text_size = size.small)
            table.cell(tbl, 4, i + 1, str.tostring(array.get(roc_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = roc_col   , text_color = #242424, text_size = size.small)
            table.cell(tbl, 5, i + 1, str.tostring(array.get(ma1_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = ma1_col   , text_color = #242424, text_size = size.small)
            table.cell(tbl, 6, i + 1, str.tostring(array.get(ma2_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = ma2_col   , text_color = #242424, text_size = size.small)
            table.cell(tbl, 7, i + 1, str.tostring(array.get(ma3_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = ma3_col   , text_color = #242424, text_size = size.small)
            table.cell(tbl, 8, i + 1, str.tostring(array.get(ma4_arr, i), "#.##"),         	text_halign = text.align_center, bgcolor = ma4_col   , text_color = #242424, text_size = size.small)
			table.cell(tbl, 9, i + 1, BLtrig_text,                						   	text_halign = text.align_center, bgcolor = BLtrig_col,    text_color = color.white, text_size = size.small)
			table.cell(tbl, 10, i + 1, SLtrig_text,                							text_halign = text.align_center, bgcolor = SLtrig_col,    text_color = color.white, text_size = size.small)
            table.cell(tbl, 11, i + 1, sup_text,                                            text_halign = text.align_center, bgcolor = sup_col,    text_color = color.white, text_size = size.small)

			//ALARM 
			alarm=input(true, title="ALARM SETTING")
			//alertbl=input(defval=70, title="Overbought")
			if BLtrig_bool and alarm
				alert("TimeFrame: " + str.tostring(timeframe.period) +"Buy" + " Long " +str.tostring(array.get(s_arr, i)) + " Price: " + str.tostring(array.get(cl_arr, i)), alert.freq_once_per_bar_close)

				
		